#%RAML 0.8
title: Steroids Data
mediaType: application/json
baseUri: https://rest-api.appgyver.com/v1

traits:
    - securedBySteroidsApiKey:
        headers:
          steroidsApiKey:
            type: string
            example: exampleapikey
            default: b3dd5e0c3b26302e1cb7f2a51d1f31235e262e83674c32eb52831a6a22169940
          steroidsAppId:
            type: integer
            example: 1234
            default: 85323
  
schemas:
  - User_collection: '{"$schema":"http://json-schema.org/schema","title":"User collection","type":"object","properties":{"results":{"type":"array","items":{"$schema":"http://json-schema.org/schema","type":"object","description":"The canonical User representation","properties":{"createdAt":{"type":"string"},"objectId":{"type":"string"},"updatedAt":{"type":"string"},"username":{"type":"string"}},"required":[]}}}}'
  - User_member: '{"$schema":"http://json-schema.org/schema","type":"object","description":"The canonical User representation","properties":{"createdAt":{"type":"string"},"objectId":{"type":"string"},"updatedAt":{"type":"string"},"username":{"type":"string"}},"required":[]}'
  - Event_collection: '{"$schema":"http://json-schema.org/schema","title":"Event collection","type":"object","properties":{"results":{"type":"array","items":{"$schema":"http://json-schema.org/schema","type":"object","description":"The canonical Event representation","properties":{"createdAt":{"type":"string"},"objectId":{"type":"string"},"title":{"type":"string"},"updatedAt":{"type":"string"}},"required":[]}}}}'
  - Event_member: '{"$schema":"http://json-schema.org/schema","type":"object","description":"The canonical Event representation","properties":{"createdAt":{"type":"string"},"objectId":{"type":"string"},"title":{"type":"string"},"updatedAt":{"type":"string"}},"required":[]}'
  - Itenary_collection: '{"$schema":"http://json-schema.org/schema","title":"Itenary collection","type":"object","properties":{"results":{"type":"array","items":{"$schema":"http://json-schema.org/schema","type":"object","description":"The canonical Itenary representation","properties":{},"required":[]}}}}'
  - Itenary_member: '{"$schema":"http://json-schema.org/schema","type":"object","description":"The canonical Itenary representation","properties":{},"required":[]}'
  - Suggestion_collection: '{"$schema":"http://json-schema.org/schema","title":"Suggestion collection","type":"object","properties":{"results":{"type":"array","items":{"$schema":"http://json-schema.org/schema","type":"object","description":"The canonical Suggestion representation","properties":{},"required":[]}}}}'
  - Suggestion_member: '{"$schema":"http://json-schema.org/schema","type":"object","description":"The canonical Suggestion representation","properties":{},"required":[]}'

resourceTypes:
  - dolan_db_collection:
      usage: This resourceType should be used for any collection of items
      is: [ securedBySteroidsApiKey ]
      get:
        description: |
          {
            "action": "collection"
          }
        responses:
          200:
            description: |
              {
                "rootKey": "objects"
              }
            body:
              application/json:
                schema: <<resourcePathName>>_collection # e.g cars
      post:
        description: |
          {
            "action": "create",
            "rootKey": "object"
          }
        body:
          application/json:
            schema: <<resourcePathName>>_member
        responses:
          200:
            description: |
              {
                "rootKey": "object"
              }
            body:
              application/json:
                schema: <<resourcePathName>>_member # e.g. car

  - dolan_db_member:
      usage: This resourceType should be used for any built.io item
      is: [ securedBySteroidsApiKey ]
      get:
        description: |
          {
            "action": "find"
          }
        responses:
          200:
            description: |
              {
                "rootKey": "object"
              }
            body:
              application/json:
                schema: <<resourcePathName>>_member # e.g. car
      put:
        description: |
          {
            "action": "update",
            "rootKey": "object"
          }
        body:
          application/json:
            schema: <<resourcePathName>>_member
        responses:
          200:
            description: |
              {
                "rootKey": "object"
              }
            body:
              application/json:
                schema: <<resourcePathName>>_member
      delete:
        description: |
          {
            "action": "destroy"
          }
        responses:
          200:

  - parse_collection:
      usage: This resourceType should be used for any collection of items
      is: [ securedBySteroidsApiKey ]
      get:
        description: |
          {
            "action": "collection"
          }
        responses:
          200:
            description: |
              {
                "rootKey": "results"
              }
            body:
              application/json:
                schema: <<resourcePathName>>_collection # e.g cars
      post:
        description: |
          {
            "action": "create"
          }
        body:
          application/json:
            schema: <<resourcePathName>>_member
        responses:
          200:
            body:
              application/json:
                schema: <<resourcePathName>>_member # e.g. car

  - parse_member:
      usage: This resourceType should be used for any parse item
      is: [ securedBySteroidsApiKey ]
      get:
        description: |
          {
            "action": "find"
          }
        responses:
          200:
            body:
              application/json:
                schema: <<resourcePathName>>_member # e.g. car
      put:
        description: |
          {
            "action": "update"
          }
        body:
          application/json:
            schema: <<resourcePathName>>_member
        responses:
          200:
            body:
              application/json:
                schema: <<resourcePathName>>_member
      delete:
        description: |
          {
            "action": "destroy"
          }
        responses:
          200:


/User:
  description: |
    {
      "resourceName": "User",
      "identifierKey": "objectId"
    }
  type: parse_collection
  /{id}:
    type: parse_member

/Event:
  description: |
    {
      "resourceName": "Event",
      "identifierKey": "objectId"
    }
  type: parse_collection
  /{id}:
    type: parse_member

/Itenary:
  description: |
    {
      "resourceName": "Itenary",
      "identifierKey": "objectId"
    }
  type: parse_collection
  /{id}:
    type: parse_member

/Suggestion:
  description: |
    {
      "resourceName": "Suggestion",
      "identifierKey": "objectId"
    }
  type: parse_collection
  /{id}:
    type: parse_member


